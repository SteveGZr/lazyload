/*! Lazy Load 2.0.0-rc.2.1 - MIT license - Original Work Copyright 2007-2019 Mika Tuupola - Modified Work Copyright 2019 Stefan VÃ¶lkl */
!function(t,e){"object"==typeof exports?module.exports=e(t):"function"==typeof define&&define.amd?define([],e):t.LazyLoad=e(t)}("undefined"!=typeof global?global:this.window||this.global,function(t){"use strict";"function"==typeof define&&define.amd&&(t=window);const e={src:"data-src",srcset:"data-srcset",selector:".lazyload",root:null,rootMargin:"0px",threshold:0},r=function(){let t={},e=!1,o=0,s=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],o++);let n=function(o){for(let s in o)Object.prototype.hasOwnProperty.call(o,s)&&(e&&"[object Object]"===Object.prototype.toString.call(o[s])?t[s]=r(!0,t[s],o[s]):t[s]=o[s])};for(;o<s;o++){n(arguments[o])}return t};function o(t,o){this.settings=r(e,o||{}),this.images=t||document.querySelectorAll(this.settings.selector),this.observer=null,this.init()}if(o.prototype={init:function(){if(!t.IntersectionObserver){if(!t.MutationObserver)return void this.loadImages();require("intersection-observer")}let e=this,r={root:this.settings.root,rootMargin:this.settings.rootMargin,threshold:[this.settings.threshold]};this.observer=new IntersectionObserver(function(t){Array.prototype.forEach.call(t,function(t){if(t.isIntersecting){e.observer.unobserve(t.target);let r=t.target.getAttribute(e.settings.src),o=t.target.getAttribute(e.settings.srcset);"img"===t.target.tagName.toLowerCase()?(r&&(t.target.onload=function(){t.target.removeAttribute(e.settings.src)},t.target.src=r),o&&(t.target.onload=function(){t.target.removeAttribute(e.settings.srcset)},t.target.srcset=o)):(t.target.onload=function(){t.target.removeAttribute(e.settings.src)},t.target.style.backgroundImage="url("+r+")")}})},r),Array.prototype.forEach.call(this.images,function(t){e.observer.observe(t)})},loadAndDestroy:function(){this.settings&&(this.loadImages(),this.destroy())},loadImages:function(){if(!this.settings)return;let t=this;Array.prototype.forEach.call(this.images,function(e){let r=e.getAttribute(t.settings.src),o=e.getAttribute(t.settings.srcset);"img"===e.tagName.toLowerCase()?(r&&(e.onload=function(){e.removeAttribute(t.settings.src)},e.src=r),o&&(e.onload=function(){e.removeAttribute(t.settings.srcset)},e.srcset=o)):(e.onload=function(){e.removeAttribute(t.settings.src)},e.style.backgroundImage="url('"+r+"')")})},destroy:function(){this.settings&&(this.observer.disconnect(),this.settings=null)}},t.lazyload=function(t,e){return new o(t,e)},t.jQuery){const e=t.jQuery;e.fn.lazyload=function(t){return(t=t||{}).attribute=t.attribute||"data-src",new o(e.makeArray(this),t),this}}return o});